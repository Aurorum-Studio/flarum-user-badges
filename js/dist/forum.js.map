{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@v17development/flarum-user-badges/webpack/bootstrap","webpack://@v17development/flarum-user-badges/webpack/runtime/compat get default export","webpack://@v17development/flarum-user-badges/webpack/runtime/define property getters","webpack://@v17development/flarum-user-badges/webpack/runtime/hasOwnProperty shorthand","webpack://@v17development/flarum-user-badges/webpack/runtime/make namespace object","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['common/app']\"","webpack://@v17development/flarum-user-badges/./src/common/index.js","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['extend']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['Model']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['models/User']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['components/UserPage']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['utils/UserControls']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['components/LinkButton']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['components/Button']\"","webpack://@v17development/flarum-user-badges/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@v17development/flarum-user-badges/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['utils/mixin']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['components/Modal']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['helpers/fullTime']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['utils/ItemList']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['components/Select']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['utils/Stream']\"","webpack://@v17development/flarum-user-badges/./src/forum/components/GiveBadgeModal.js","webpack://@v17development/flarum-user-badges/./src/forum/components/BadgeModal.js","webpack://@v17development/flarum-user-badges/./src/common/models/Badge.js","webpack://@v17development/flarum-user-badges/./src/common/models/BadgeCategory.js","webpack://@v17development/flarum-user-badges/./src/common/models/UserBadge.js","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['common/Component']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@v17development/flarum-user-badges/./src/common/components/UserBadge.js","webpack://@v17development/flarum-user-badges/./src/forum/components/UserBadgeList.js","webpack://@v17development/flarum-user-badges/./src/forum/components/BadgesProfilePage.js","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['components/Page']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['components/IndexPage']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['components/Link']\"","webpack://@v17development/flarum-user-badges/./src/forum/components/BadgeCategoryList/TableView.js","webpack://@v17development/flarum-user-badges/./src/forum/components/BadgeCategoryList/BlockListView.js","webpack://@v17development/flarum-user-badges/./src/forum/components/BadgesOverviewPage.js","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['helpers/avatar']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['helpers/humanTime']\"","webpack://@v17development/flarum-user-badges/./src/forum/components/BadgeUserList.js","webpack://@v17development/flarum-user-badges/./src/forum/components/BadgeItemPage.js","webpack://@v17development/flarum-user-badges/./src/forum/addSidebarNav.js","webpack://@v17development/flarum-user-badges/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['common/states/PaginatedListState']\"","webpack://@v17development/flarum-user-badges/./src/forum/states/UserBadgeListState.js","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@v17development/flarum-user-badges/./src/forum/notification/BadgeReceivedNotification.js","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['forum/app']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['common/extend']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@v17development/flarum-user-badges/external root \"flarum.core.compat['common/components/Link']\"","webpack://@v17development/flarum-user-badges/./src/forum/index.js","webpack://@v17development/flarum-user-badges/./src/forum/addBadgeListUserCard.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('v17development/flarum-user-badges', () => {\n  // console.log('[v17development/flarum-user-badges] Hello, forum and admin!')\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/UserPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/UserControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Button'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/mixin'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/fullTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/Stream'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\nimport Select from 'flarum/components/Select';\nimport Stream from 'flarum/utils/Stream';\nimport BadgeModal from './BadgeModal';\n\nexport default class GiveBadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Select image\n    this.selectedBadge = this.attrs.badge ? this.attrs.badge.badge() : null;\n\n    // Current user\n    this.user = this.attrs.badge ? this.attrs.badge.user() : this.attrs.user;\n\n    // User has badge\n    this.userHasBadge = false;\n\n    // Badge model\n    this.badge = this.attrs.badge ? this.attrs.badge : app.store.createRecord('userBadges');\n\n    // Earning reason\n    this.description = Stream(this.badge.description());\n\n    // List of available bagges\n    this.categories = {};\n\n    this.uncategorizedBadges = [];\n\n    this.loading = false;\n\n    // Load all available badges\n    if (!this.attrs.badge) {\n      this.loading = true;\n\n      app.store\n        .find('badges', {\n          include: 'category',\n        })\n        .then((badges) => {\n          badges.forEach((badge) => {\n            // Categorized\n            if (badge.category()) {\n              const category = badge.category();\n\n              if (!this.categories[category.id()]) {\n                this.categories[category.id()] = {\n                  category,\n                  badges: [badge],\n                };\n              } else {\n                this.categories[category.id()].badges.push(badge);\n              }\n            }\n            // Uncategorized\n            else {\n              this.uncategorizedBadges.push(badge);\n            }\n          });\n\n          this.loading = false;\n\n          // Redraw\n          m.redraw();\n        });\n    }\n  }\n\n  className() {\n    return 'Modal--small BadgeModal';\n  }\n\n  title() {\n    return app.translator.trans(`v17development-flarum-badges.forum.${this.badge.exists ? 'update' : 'give'}_badge`);\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">\n          <div className=\"Form\">{this.fields().toArray()}</div>\n        </div>\n\n        <div className=\"Modal-footer\">\n          <Button className={'Button Button--primary'} type={'submit'} loading={this.loading} disabled={this.userHasBadge}>\n            {app.translator.trans('core.forum.composer_edit.submit_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    // Badge selector\n    items.add(\n      'badge',\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>{app.translator.trans('v17development-flarum-badges.forum.badge.badge')}</b>\n        </p>\n\n        <div className={'Select'}>\n          <select\n            value={this.selectedBadge ? this.selectedBadge.id() : 'empty'}\n            disabled={!!this.attrs.badge}\n            onchange={(e) => {\n              if (e.target.value === 'empty') return;\n              this.selectedBadge = app.store.getById('badges', e.target.value);\n\n              // Check if the user already has this badge\n              this.checkUserHasBadge(this.selectedBadge);\n            }}\n            className=\"Select-input FormControl\"\n          >\n            <option value={'empty'}>{app.translator.trans('v17development-flarum-badges.forum.select_badge')}</option>\n\n            {/* When no badge is selected, show all available badges */}\n            {!this.attrs.badge &&\n              Object.values(this.categories).map(({ category, badges }) => (\n                <optgroup label={category.name()}>\n                  {badges.map((badge) => (\n                    <option value={badge.id()}>{badge.name()}</option>\n                  ))}\n                </optgroup>\n              ))}\n\n            {!this.attrs.badge && this.uncategorizedBadges.length >= 1 && (\n              <optgroup label={app.translator.trans('v17development-flarum-badges.forum.uncategorized')}>\n                {this.uncategorizedBadges.map((badge) => (\n                  <option value={badge.id()}>{badge.name()}</option>\n                ))}\n              </optgroup>\n            )}\n\n            {/* When a badge is already assigned */}\n            {!!this.attrs.badge && <option value={this.selectedBadge.id()}>{this.selectedBadge.name()}</option>}\n          </select>\n          <i class=\"icon fas fa-caret-down Select-caret\"></i>\n        </div>\n\n        {this.userHasBadge && <p className={'UserHasBadge'}>{app.translator.trans('v17development-flarum-badges.forum.user_has_badge')}</p>}\n      </div>,\n      30\n    );\n\n    // Badge description\n    items.add(\n      'badge_description',\n      <div className={'BadgeModalListItem'}>\n        <p>\n          <b>{app.translator.trans('v17development-flarum-badges.forum.badge.description')}:</b>\n        </p>\n        <p>{this.selectedBadge ? this.selectedBadge.description() : app.translator.trans('v17development-flarum-badges.forum.select_badge')}</p>\n      </div>,\n      30\n    );\n\n    // Badge earning reason\n    items.add(\n      'description',\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>{app.translator.trans('v17development-flarum-badges.forum.badge.earning_reason')}</b>\n        </p>\n        <textarea\n          className=\"FormControl\"\n          placeholder={app.translator.trans('v17development-flarum-badges.forum.badge.earning_reason')}\n          bidi={this.description}\n        />\n      </div>,\n      30\n    );\n\n    return items;\n  }\n\n  checkUserHasBadge(badge) {\n    let foundBadge = false;\n\n    this.user.userBadges().map((userBadge) => {\n      if (userBadge.badge() == badge) {\n        foundBadge = true;\n      }\n    });\n\n    this.userHasBadge = foundBadge;\n\n    m.redraw();\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    this.badge\n      .save({\n        description: this.description(),\n        relationships: this.attrs.badge\n          ? {}\n          : {\n              badge: this.selectedBadge,\n              user: this.user,\n            },\n      })\n      .then(\n        () => {\n          // Re-open badge modal\n          if (this.attrs.badge) {\n            app.modal.show(BadgeModal, {\n              badge: this.attrs.badge.badge(),\n              userBadgeData: this.attrs.badge,\n            });\n          } else {\n            this.hide();\n          }\n\n          m.redraw();\n        },\n        (response) => {\n          this.loading = false;\n          this.handleErrors(response);\n        }\n      );\n  }\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport fullTime from 'flarum/helpers/fullTime';\nimport ItemList from 'flarum/utils/ItemList';\nimport LinkButton from 'flarum/components/LinkButton';\nimport GiveBadgeModal from './GiveBadgeModal';\n\nexport default class BadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n  }\n\n  className() {\n    return 'Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('v17development-flarum-badges.forum.badge_information');\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        <div className=\"Modal-footer\">\n          <LinkButton\n            href={app.route('badges.item', {\n              id: this.attrs.badge.id(),\n            })}\n            className={'Button'}\n            style={{\n              margin: '0 10px',\n            }}\n          >\n            {app.translator.trans('v17development-flarum-badges.forum.badge.badge_details')}\n          </LinkButton>\n\n          {this.attrs.userBadgeData && app.forum.attribute('canGiveBadge') && (\n            <Button\n              className={'Button Button--primary'}\n              onclick={() => {\n                if (confirm(app.translator.trans('v17development-flarum-badges.forum.moderation.remove_badge_confirm'))) {\n                  this.loading = true;\n                  this.attrs.userBadgeData.delete().then(() => this.hide());\n                }\n              }}\n              loading={this.loading}\n            >\n              {app.translator.trans('v17development-flarum-badges.forum.moderation.remove_badge')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n\n    // Badge name\n    items.add(\n      'name',\n      <div className={'BadgeModalListItem'}>\n        <p>\n          <b>{app.translator.trans('v17development-flarum-badges.forum.badge.name')}:</b>\n        </p>\n        <p>{this.attrs.badge.name()}</p>\n      </div>\n    );\n\n    // Badge description\n    items.add(\n      'description',\n      <div className={'BadgeModalListItem'}>\n        <p>\n          <b>{app.translator.trans('v17development-flarum-badges.forum.badge.description')}:</b>\n        </p>\n        <p>{this.attrs.badge.description()}</p>\n      </div>\n    );\n\n    // Badge earning reason\n    if (this.attrs.userBadgeData && (this.attrs.userBadgeData.description() || app.forum.attribute('canGiveBadge'))) {\n      items.add(\n        'earning_reason',\n        <div className={'BadgeModalListItem'}>\n          <p>\n            <b>{app.translator.trans('v17development-flarum-badges.forum.badge.earning_reason')}:</b>\n          </p>\n\n          <p>\n            {this.attrs.userBadgeData.description() ? (\n              this.attrs.userBadgeData.description()\n            ) : (\n              <i>{app.translator.trans('v17development-flarum-badges.forum.badge.no_earning_reason')}</i>\n            )}\n          </p>\n          <p>\n            {app.forum.attribute('canGiveBadge') && (\n              <a\n                href={'#'}\n                onclick={(e) => {\n                  e.preventDefault();\n                  app.modal.show(GiveBadgeModal, {\n                    badge: this.attrs.userBadgeData,\n                  });\n                }}\n              >\n                {app.translator.trans('v17development-flarum-badges.forum.badge.update_earning_reason')}\n              </a>\n            )}\n          </p>\n        </div>\n      );\n    }\n\n    // Badge earned on\n    if (this.attrs.userBadgeData) {\n      items.add(\n        'earned_date',\n        <div className={'BadgeModalListItem'}>\n          <p>\n            <b>{app.translator.trans('v17development-flarum-badges.forum.badge.earned_on')}:</b>\n          </p>\n          <p>{fullTime(this.attrs.userBadgeData.assignedAt())}</p>\n        </div>\n      );\n    }\n\n    // Badge category\n    if (this.attrs.userBadgeData) {\n      items.add(\n        'category',\n        <div className={'BadgeModalListItem'}>\n          <p>\n            <b>{app.translator.trans('v17development-flarum-badges.forum.badge.category')}:</b>\n          </p>\n          <p>\n            {this.attrs.badge.category() && this.attrs.badge.category().name()}\n\n            {/* Uncategorized */}\n            {!this.attrs.badge.category() && app.translator.trans('v17development-flarum-badges.forum.uncategorized')}\n            {/* <Link\n              href={app.route(\"badges.category\", {\n                category: this.attrs.badge.category().id(),\n              })}\n            >\n              {app.translator.trans(\n                \"v17development-flarum-badges.forum.all_badges\"\n              )}\n            </Link> */}\n          </p>\n        </div>\n      );\n    }\n\n    // Badge category\n    if (this.attrs.badge && this.attrs.badge.earnedAmount()) {\n      items.add(\n        'earned_amount',\n        <div className={'BadgeModalListItem'}>\n          <p>\n            {app.translator.trans('v17development-flarum-badges.forum.badge.earned_count', {\n              count: this.attrs.badge.earnedAmount(),\n            })}\n          </p>\n        </div>\n      );\n    }\n\n    return items;\n  }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport BadgeModal from '../../forum/components/BadgeModal';\n\nexport default class Badge extends mixin(Model, {\n  name: Model.attribute('name'),\n  icon: Model.attribute('icon'),\n  order: Model.attribute('order'),\n  image: Model.attribute('image'),\n  description: Model.attribute('description'),\n  isVisible: Model.attribute('isVisible'),\n  createdAt: Model.attribute('createdAt'),\n  earnedAmount: Model.attribute('earnedAmount'),\n  category: Model.hasOne('category'),\n  backgroundColor: Model.attribute('backgroundColor'),\n  iconColor: Model.attribute('iconColor'),\n  labelColor: Model.attribute('labelColor'),\n}) {\n  apiEndpoint() {\n    return '/badges' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class BadgeCategory extends mixin(Model, {\n  name: Model.attribute('name'),\n  order: Model.attribute('order'),\n  description: Model.attribute('description'),\n  isEnabled: Model.attribute('isEnabled'),\n  createdAt: Model.attribute('createdAt'),\n  isTable: Model.attribute('isTable'),\n  users: Model.hasMany('users'),\n  badges: Model.hasMany('badges'),\n}) {\n  apiEndpoint() {\n    return '/badge_categories' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class UserBadge extends mixin(Model, {\n  user: Model.hasOne('user'),\n  badge: Model.hasOne('badge'),\n  description: Model.attribute('description'),\n  isPrimary: Model.attribute('isPrimary'),\n  assignedAt: Model.attribute('assignedAt'),\n}) {\n  apiEndpoint() {\n    return '/user_badges' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import Component from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport BadgeModal from '../../forum/components/BadgeModal';\n\nexport default class UserBadge extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.tooltip = this.attrs.tooltip !== false;\n    this.forceVisibility = this.attrs.forceVisibility === true;\n  }\n\n  view() {\n    // Hide badge when not enabled\n    if (!this.attrs.badge.isVisible() && !this.forceVisibility) {\n      return null;\n    }\n\n    // Just show badge\n    if (this.tooltip === false) return this.badge();\n\n    return <Tooltip text={`${this.attrs.badge.description() ? this.attrs.badge.description() : ''}`}>{this.badge()}</Tooltip>;\n  }\n\n  badge() {\n    const isPartlyHidden = !this.attrs.badge.isVisible() && this.forceVisibility;\n\n    // This badge is an image\n    if (this.attrs.badge.image()) {\n      return (\n        <img\n          src={this.attrs.badge.image()}\n          className={'UserBadgeImage'}\n          onclick={() => {\n            if (this.attrs.onclick) {\n              this.attrs.onclick();\n            }\n          }}\n          style={{\n            opacity: isPartlyHidden ? 0.5 : undefined,\n          }}\n        />\n      );\n    }\n\n    return (\n      <span\n        className={`UserBadge UserBadge-${this.attrs.badge.id()}`}\n        onclick={() => {\n          if (this.attrs.onclick) {\n            this.attrs.onclick();\n          }\n        }}\n        style={{\n          backgroundColor: this.attrs.badge.backgroundColor(),\n          color: this.attrs.badge.labelColor(),\n          borderColor: this.attrs.badge.backgroundColor(),\n          opacity: isPartlyHidden ? 0.5 : undefined,\n        }}\n      >\n        <i className={this.attrs.badge.icon()} style={{ color: this.attrs.badge.iconColor() }} /> {this.attrs.badge.name()}\n      </span>\n    );\n  }\n}\n","import Component from 'flarum/common/Component';\nimport UserBadge from '../../common/components/UserBadge';\nimport BadgeModal from './BadgeModal';\n\nexport default class UserBadgeList extends Component {\n  view() {\n    const categories = {};\n    const uncategorized = [];\n\n    this.attrs.user.userBadges().map((userBadge) => {\n      if (!userBadge) return null;\n\n      // Categorized\n      if (userBadge.badge().category()) {\n        const category = userBadge.badge().category();\n\n        if (!categories[category.id()]) {\n          categories[category.id()] = {\n            category,\n            badges: [userBadge],\n          };\n        } else {\n          categories[category.id()].badges.push(userBadge);\n        }\n      }\n      // Uncategorized\n      else {\n        uncategorized.push(userBadge);\n      }\n    });\n\n    return (\n      <div className=\"UserBadges\">\n        {Object.keys(categories).length === 0 && (\n          <div className={'Placeholder'}>\n            <p>{app.translator.trans('v17development-flarum-badges.forum.user_no_badges')}</p>\n          </div>\n        )}\n\n        {Object.keys(categories).length >= 1 &&\n          Object.keys(categories)\n            .sort((a, b) => categories[a].category.order() - categories[b].category.order())\n            .map((id) => {\n              const category = categories[id].category;\n              const badges = categories[id].badges;\n\n              if (!category.isEnabled()) return null;\n\n              return (\n                <div className={'UserBadgesCategory'}>\n                  <h3>{category.name()}</h3>\n\n                  {category.description() && <p>{category.description()}</p>}\n\n                  {badges\n                    .sort((a, b) => a.badge().order() - b.badge().order())\n                    .map((userBadge) => (\n                      <UserBadge\n                        badge={userBadge.badge()}\n                        onclick={() =>\n                          app.modal.show(BadgeModal, {\n                            badge: userBadge.badge(),\n                            userBadgeData: userBadge,\n                          })\n                        }\n                      />\n                    ))}\n                </div>\n              );\n            })}\n\n        {/* Uncategorized badges */}\n        {uncategorized.length >= 1 && (\n          <div className={'UserBadgesCategory'}>\n            <h3>{app.translator.trans('v17development-flarum-badges.forum.uncategorized')}</h3>\n\n            {uncategorized\n              .sort((a, b) => a.badge().order() - b.badge().order())\n              .map((userBadge) => (\n                <UserBadge\n                  badge={userBadge.badge()}\n                  onclick={() =>\n                    app.modal.show(BadgeModal, {\n                      badge: userBadge.badge(),\n                      userBadgeData: userBadge,\n                    })\n                  }\n                />\n              ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import UserPage from 'flarum/components/UserPage';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport UserBadgeList from './UserBadgeList';\n\nexport default class BadgesProfilePage extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.user = null;\n\n    this.loading = true;\n\n    this.loadUser(m.route.param('username'));\n  }\n\n  content() {\n    if (!this.user || this.loading) {\n      return <LoadingIndicator size={46} />;\n    }\n\n    return UserBadgeList.component({\n      user: this.user,\n    });\n  }\n\n  show(user) {\n    super.show(user);\n    this.user = user;\n\n    app.store\n      .find('users', user.id(), {\n        include: 'userBadges,userBadges.badge,userBadges.badge.category',\n      })\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Link'];","import Component from 'flarum/common/Component';\nimport Link from 'flarum/components/Link';\nimport UserBadge from '../../../common/components/UserBadge';\n\nexport default class TableView extends Component {\n  view() {\n    if (!this.attrs.badges) {\n      return null;\n    }\n\n    const badges = this.attrs.badges;\n\n    return (\n      <table width={'100%'} className={'BadgeTable'}>\n        <thead>\n          <tr>\n            <th scope=\"col\">{app.translator.trans('v17development-flarum-badges.forum.badge.badges')}</th>\n            <th scope=\"col\">{app.translator.trans('v17development-flarum-badges.forum.badge.description')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {badges.map((badge) => {\n            return (\n              <tr>\n                <td>\n                  <Link href={app.route('badges.item', { id: badge.id() })}>\n                    <UserBadge badge={badge} tooltip={false} />\n                  </Link>\n                </td>\n                <td>\n                  {badge.description()}\n\n                  <div className={'BadgeTableRewarded'}>\n                    {app.translator.trans('v17development-flarum-badges.forum.badge.earned_count', {\n                      count: badge.earnedAmount(),\n                    })}\n                  </div>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import Component from 'flarum/common/Component';\nimport Link from 'flarum/components/Link';\nimport UserBadge from '../../../common/components/UserBadge';\n\nexport default class BlockListView extends Component {\n  view() {\n    if (!this.attrs.badges) {\n      return null;\n    }\n\n    const badges = this.attrs.badges;\n\n    return (\n      <ul className={'BadgeCategoryList'}>\n        {badges.map((badge) => {\n          return (\n            <li>\n              <Link href={app.route('badges.item', { id: badge.id() })} className={'BadgeContainer'}>\n                <div className={'BadgeContainerInfo'}>\n                  <UserBadge badge={badge} tooltip={false} />\n\n                  <p className={'BadgeDescription'}>{badge.description()}</p>\n\n                  <p>\n                    {app.translator.trans('v17development-flarum-badges.forum.badge.earned_count', {\n                      count: badge.earnedAmount(),\n                    })}\n                  </p>\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import Page from 'flarum/components/Page';\nimport IndexPage from 'flarum/components/IndexPage';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport TableView from './BadgeCategoryList/TableView';\nimport BlockListView from './BadgeCategoryList/BlockListView';\n\nexport default class BadgesOverviewPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.bodyClass = 'App--index';\n\n    this.loading = true;\n\n    app.history.push('badgeOverviewPage');\n\n    app.setTitle(app.translator.trans('v17development-flarum-badges.forum.badge.badges'));\n\n    // Load badge categories\n    app.store.find('badge_categories').then(() => {\n      this.loading = false;\n\n      m.redraw();\n    });\n  }\n\n  view() {\n    const categories = app.store.all('badgeCategories').sort((a, b) => a.order() - b.order());\n\n    return (\n      <div className=\"IndexPage\">\n        {IndexPage.prototype.hero()}\n\n        <div className=\"container\">\n          <div className=\"sideNavContainer\">\n            <nav className=\"IndexPage-nav sideNav\">\n              <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\n            </nav>\n            <div className=\"IndexPage-results sideNavOffset\">\n              <h2 className={'BadgeOverviewTitle'}>{app.translator.trans('v17development-flarum-badges.forum.badge.badges')}</h2>\n\n              {this.loading && <LoadingIndicator size={'large'} />}\n\n              {!this.loading &&\n                categories.map((category) => {\n                  const badges = category.badges().sort((a, b) => a.order() - b.order());\n\n                  return (\n                    <div className={'BadgeCategory'}>\n                      <h3>{category.name()}</h3>\n                      {category.description() && <p>{category.description()}</p>}\n\n                      {category.isTable() && <TableView badges={badges} />}\n\n                      {!category.isTable() && <BlockListView badges={badges} />}\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/humanTime'];","import Component from 'flarum/common/Component';\nimport Button from 'flarum/components/Button';\nimport Link from 'flarum/components/Link';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport avatar from 'flarum/helpers/avatar';\nimport humanTime from 'flarum/helpers/humanTime';\n\nexport default class BadgeUserList extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Load articles\n    this.attrs.state.refreshParams({\n      filter: {\n        badge: this.attrs.badgeId,\n      },\n      sort: '-assignedAt',\n    });\n  }\n\n  view() {\n    const state = this.attrs.state;\n\n    let loading = null;\n\n    if (state.isInitialLoading() || state.isLoadingNext()) {\n      loading = LoadingIndicator.component({\n        size: 'large',\n      });\n    } else if (state.hasNext()) {\n      loading = Button.component(\n        {\n          className: 'Button',\n          icon: 'fas fa-chevron-down',\n          onclick: state.loadNext.bind(state),\n        },\n        app.translator.trans('core.forum.discussion_list.load_more_button')\n      );\n    }\n\n    // No items\n    if (state.isInitialLoading() && state.isEmpty()) {\n      return <LoadingIndicator />;\n    }\n\n    // No items\n    if (state.isEmpty()) {\n      return <div className={'BadgeUserList-empty'}>{app.translator.trans('v17development-flarum-badges.forum.no_received')}</div>;\n    }\n\n    return (\n      <div>\n        <ul className={'BadgeUserList'}>\n          {state.getPages().map((pg) => {\n            return pg.items.map((userBadge) => {\n              return (\n                <li>\n                  <Link\n                    href={app.route('user.badges', {\n                      username: userBadge.user().username(),\n                    })}\n                    className={'BadgeUserList-user'}\n                  >\n                    {avatar(userBadge.user())}\n\n                    <div className={'BadgeUserList-userinfo'}>\n                      <h4>{userBadge.user().displayName()}</h4>\n\n                      <p>\n                        {app.translator.trans('v17development-flarum-badges.forum.badge.received_on', {\n                          date: humanTime(userBadge.assignedAt()),\n                        })}\n                      </p>\n                    </div>\n                  </Link>\n                </li>\n              );\n            });\n          })}\n        </ul>\n\n        {loading && <div className=\"SupportSearchList-loadMore\">{loading}</div>}\n      </div>\n    );\n  }\n}\n","import Page from 'flarum/components/Page';\nimport IndexPage from 'flarum/components/IndexPage';\nimport listItems from 'flarum/common/helpers/listItems';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport LinkButton from 'flarum/components/LinkButton';\nimport BadgeUserList from './BadgeUserList';\n\nexport default class BadgeItemPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.bodyClass = 'App--index';\n\n    const found = app.store.getById('badges', m.route.param('id'));\n\n    this.loading = !found;\n\n    if (!found) {\n      // Load badge categories\n      app.store.find(`badges/${m.route.param('id')}`).then((badge) => {\n        this.loading = false;\n\n        app.history.push('badgeItemPage', badge.name());\n\n        this.setTitle(badge);\n\n        m.redraw();\n      });\n    } else {\n      app.history.push('badgeItemPage', found.name());\n\n      this.setTitle(found);\n    }\n  }\n\n  setTitle(badge) {\n    app.setTitle(`${badge.name()} - ${app.translator.trans('v17development-flarum-badges.forum.badge.badges')}`);\n  }\n\n  view() {\n    const badge = app.store.getById('badges', m.route.param('id'));\n\n    return (\n      <div className=\"IndexPage\">\n        {IndexPage.prototype.hero()}\n\n        <div className=\"container\">\n          <div className=\"sideNavContainer\">\n            <nav className=\"IndexPage-nav sideNav\">\n              <ul>{listItems(IndexPage.prototype.sidebarItems().toArray())}</ul>\n            </nav>\n            <div className=\"IndexPage-results sideNavOffset\">\n              <LinkButton href={app.route('badges')} icon={'fas fa-chevron-left'} className={'Button BadgesOverviewButton'}>\n                {app.translator.trans('v17development-flarum-badges.forum.badge.badges')}\n              </LinkButton>\n\n              {this.loading && <LoadingIndicator size={'large'} />}\n\n              {!this.loading && (\n                <div className={'BadgeUserListInfo'}>\n                  <i className={badge.icon()} />\n\n                  <div className={'BadgeUserListInfo-meta'}>\n                    <h3>{badge.name()}</h3>\n                    <p>{badge.description()}</p>\n                  </div>\n                </div>\n              )}\n\n              {badge && (\n                <h3>\n                  {app.translator.trans('v17development-flarum-badges.forum.badge.earned_by_count', {\n                    count: badge.earnedAmount(),\n                  })}\n                </h3>\n              )}\n\n              {!this.loading && app.forum.attribute('canViewDetailedBadgeUsers') && (\n                <BadgeUserList state={app.userBadgeListState} badgeId={badge.id()} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { extend } from 'flarum/extend';\nimport IndexPage from 'flarum/components/IndexPage';\nimport LinkButton from 'flarum/components/LinkButton';\n\nexport default function addSidebarNav() {\n  extend(IndexPage.prototype, 'navItems', function (items) {\n    items.add(\n      'badges',\n      <LinkButton icon=\"fas fa-id-badge\" href={app.route('badges')}>\n        {app.translator.trans('v17development-flarum-badges.forum.badge.badges')}\n      </LinkButton>,\n      15\n    );\n\n    return items;\n  });\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/states/PaginatedListState'];","import PaginatedListState from 'flarum/common/states/PaginatedListState';\n\nexport default class UserBadgeListState extends PaginatedListState {\n  constructor(params, page = 1) {\n    super(params, page, 18);\n  }\n\n  get type() {\n    return 'user_badges';\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import Notification from 'flarum/forum/components/Notification';\n\nexport default class BadgeReceivedNotification extends Notification {\n  icon() {\n    return '';\n  }\n\n  href() {\n    return app.route('user.badges', {\n      username: app.session.user.username(),\n    });\n  }\n\n  content() {\n    return app.translator.trans('v17development-flarum-badges.forum.notification.title');\n  }\n\n  excerpt() {\n    const subject = this.attrs.notification.subject();\n\n    return (\n      <div>\n        <i className={`icon ${subject.badge().icon()}`} />\n\n        {subject.badge().name()}\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationGrid'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","import { extend } from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport User from 'flarum/models/User';\nimport UserPage from 'flarum/components/UserPage';\nimport UserControls from 'flarum/utils/UserControls';\nimport LinkButton from 'flarum/components/LinkButton';\nimport Button from 'flarum/components/Button';\nimport Badge from '../common/models/Badge';\nimport BadgeCategory from '../common/models/BadgeCategory';\nimport UserBadge from '../common/models/UserBadge';\nimport BadgesProfilePage from './components/BadgesProfilePage';\nimport BadgesOverviewPage from './components/BadgesOverviewPage';\nimport BadgeItemPage from './components/BadgeItemPage';\nimport GiveBadgeModal from './components/GiveBadgeModal';\nimport addSidebarNav from './addSidebarNav';\nimport UserBadgeListState from './states/UserBadgeListState';\nimport BadgeReceivedNotification from './notification/BadgeReceivedNotification';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\nimport addBadgeListUserCard from './addBadgeListUserCard';\n\napp.initializers.add('v17development-flarum-badges', (app) => {\n  app.store.models.badges = Badge;\n  app.store.models.badgeCategories = BadgeCategory;\n  app.store.models.userBadges = UserBadge;\n\n  User.prototype.userBadges = Model.hasMany('userBadges');\n  User.prototype.userPrimaryBadge = Model.hasOne('userPrimaryBadge');\n\n  // Add user badges to the user profile\n  app.routes['user.badges'] = {\n    path: '/u/:username/badges',\n    component: BadgesProfilePage,\n  };\n\n  // Badges overview page\n  app.routes.badges = {\n    path: '/badges',\n    component: BadgesOverviewPage,\n  };\n\n  // Future\n  // // Badges overview page\n  // app.routes[\"badges.category\"] = {\n  //   path: \"/badges/category/:id\",\n  //   component: BadgesOverviewPage,\n  // };\n\n  // Badge item page\n  app.routes['badges.item'] = {\n    path: '/badges/:id',\n    component: BadgeItemPage,\n  };\n\n  addSidebarNav();\n\n  app.userBadgeListState = new UserBadgeListState({});\n\n  // Badge received notification\n  app.notificationComponents.badgeReceived = BadgeReceivedNotification;\n\n  // Enable badge notifications?\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('badgeReceived', {\n      name: 'badgeReceived',\n      icon: 'fas fa-user-tag',\n      label: app.translator.trans('v17development-flarum-badges.forum.notification.settings'),\n    });\n  });\n\n  // Add uploads to user page menu items\n  extend(UserPage.prototype, 'navItems', function (items) {\n    items.add(\n      'badges',\n      LinkButton.component(\n        {\n          href: app.route('user.badges', {\n            username: this.user.username(),\n          }),\n          name: 'badges',\n          icon: 'fas fa-user-tag',\n        },\n        [\n          app.translator.trans('v17development-flarum-badges.forum.badge.badges'),\n          <span className=\"Button-badge\">{this.user.userBadges().length}</span>,\n        ]\n      ),\n      90\n    );\n  });\n\n  extend(UserControls, 'moderationControls', function (items, user) {\n    // User can give badges\n    if (app.forum.attribute('canGiveBadge')) {\n      items.add(\n        'test',\n        <Button\n          icon=\"fas fa-user-tag\"\n          onclick={() =>\n            app.modal.show(GiveBadgeModal, {\n              user: user,\n            })\n          }\n        >\n          {app.translator.trans('v17development-flarum-badges.forum.give_badge')}\n        </Button>\n      );\n    }\n  });\n  addBadgeListUserCard();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport Link from 'flarum/common/components/Link';\nimport UserBadge from '../common/components/UserBadge';\nimport BadgeModal from './components/BadgeModal';\n\nexport default function addBadgeListUserCard() {\n  extend(UserCard.prototype, 'infoItems', function (items) {\n    const user = this.attrs.user;\n    const userBadges = user.userBadges();\n\n    if (userBadges.length < 1 || !app.forum.attribute('showBadgesOnUserCard')) return;\n\n    const limit = app.forum.attribute('numberOfBadgesOnUserCard');\n    const badges = userBadges.slice(0, limit).map((userBadge) => (\n      <UserBadge\n        badge={userBadge.badge()}\n        onclick={() =>\n          app.modal.show(BadgeModal, {\n            badge: userBadge.badge(),\n            userBadgeData: userBadge,\n          })\n        }\n      />\n    ));\n\n    if (badges.length < userBadges.length) {\n      const count = userBadges.length - badges.length;\n      badges.push(\n        <Link\n          href={app.route('user.badges', {\n            username: user.username(),\n          })}\n          className=\"UserBadge more-badges\"\n        >\n          {app.translator.trans('v17development-flarum-badges.forum.badge.others_link', { count })}\n        </Link>\n      );\n    }\n\n    items.add('badges', badges);\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","GiveBadgeModal","oninit","vnode","this","selectedBadge","attrs","badge","user","userHasBadge","store","createRecord","description","Stream","categories","uncategorizedBadges","loading","find","include","then","badges","forEach","category","id","push","m","redraw","className","title","translator","trans","exists","content","fields","toArray","type","disabled","items","ItemList","add","onchange","e","target","getById","checkUserHasBadge","values","map","label","name","length","class","placeholder","bidi","foundBadge","userBadges","userBadge","onsubmit","preventDefault","save","relationships","modal","show","BadgeModal","userBadgeData","hide","response","handleErrors","Modal","data","href","route","style","margin","forum","attribute","onclick","confirm","fullTime","assignedAt","earnedAmount","count","Badge","apiEndpoint","mixin","Model","icon","order","image","isVisible","createdAt","backgroundColor","iconColor","labelColor","BadgeCategory","isEnabled","isTable","users","UserBadge","isPrimary","tooltip","forceVisibility","view","text","isPartlyHidden","src","opacity","undefined","color","borderColor","Component","UserBadgeList","uncategorized","keys","sort","b","BadgesProfilePage","loadUser","param","size","component","UserPage","TableView","width","scope","BlockListView","BadgesOverviewPage","bodyClass","history","setTitle","all","IndexPage","listItems","Page","BadgeUserList","state","refreshParams","filter","badgeId","isInitialLoading","isLoadingNext","LoadingIndicator","hasNext","Button","loadNext","bind","isEmpty","getPages","pg","username","avatar","displayName","date","humanTime","BadgeItemPage","found","userBadgeListState","addSidebarNav","extend","_defineProperties","props","i","descriptor","configurable","writable","UserBadgeListState","params","page","Constructor","protoProps","PaginatedListState","BadgeReceivedNotification","session","excerpt","subject","notification","Notification","initializers","models","badgeCategories","User","routes","path","notificationComponents","badgeReceived","NotificationGrid","LinkButton","UserControls","UserCard","limit","slice"],"sourceRoot":""}