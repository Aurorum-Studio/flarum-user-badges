{"version":3,"sources":["webpack://@v17development/flarum-badges/webpack/bootstrap","webpack://@v17development/flarum-badges/external \"flarum.core.compat['Model']\"","webpack://@v17development/flarum-badges/./node_modules/@babel/runtime/helpers/inheritsLoose/_index.mjs","webpack://@v17development/flarum-badges/external \"flarum.core.compat['components/Button']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['components/Modal']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['utils/Stream']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['utils/ItemList']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['utils/mixin']\"","webpack://@v17development/flarum-badges/./src/forum/components/BadgeModal.js","webpack://@v17development/flarum-badges/./src/forum/components/GiveBadgeModal.js","webpack://@v17development/flarum-badges/external \"flarum.core.compat['common/Component']\"","webpack://@v17development/flarum-badges/./src/common/models/Badge.js","webpack://@v17development/flarum-badges/./node_modules/@babel/runtime/helpers/setPrototypeOf/index.js","webpack://@v17development/flarum-badges/external \"flarum.core.compat['helpers/fullTime']\"","webpack://@v17development/flarum-badges/./src/common/models/BadgeCategory.js","webpack://@v17development/flarum-badges/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['components/UserPage']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['components/Page']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['components/Link']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['components/Select']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['extend']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['models/User']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['utils/UserControls']\"","webpack://@v17development/flarum-badges/external \"flarum.core.compat['components/LinkButton']\"","webpack://@v17development/flarum-badges/./src/common/models/UserBadge.js","webpack://@v17development/flarum-badges/./src/forum/components/UserBadge.js","webpack://@v17development/flarum-badges/./src/forum/components/UserBadgeList.js","webpack://@v17development/flarum-badges/./src/forum/components/BadgesProfilePage.js","webpack://@v17development/flarum-badges/./src/forum/components/BadgesOverviewPage.js","webpack://@v17development/flarum-badges/./src/forum/components/BadgeItemPage.js","webpack://@v17development/flarum-badges/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","setPrototypeOf","BadgeModal","oninit","vnode","this","loading","className","title","app","translator","trans","content","data","toArray","attrs","userBadgeData","forum","attribute","onclick","confirm","then","hide","items","ItemList","add","badge","description","href","e","preventDefault","modal","show","GiveBadgeModal","fullTime","assignedAt","category","earnedAmount","transChoice","count","Modal","selectedBadge","user","userHasBadge","store","createRecord","Stream","categories","uncategorizedBadges","availableBadges","id","find","include","badges","forEach","push","redraw","exists","fields","type","disabled","onchange","target","getById","checkUserHasBadge","values","map","label","length","class","placeholder","bidi","foundBadge","userBadges","userBadge","onsubmit","save","relationships","response","handleErrors","Badge","apiEndpoint","mixin","Model","icon","order","image","isVisible","createdAt","hasOne","_setPrototypeOf","__proto__","BadgeCategory","isEnabled","users","hasMany","UserBadge","isPrimary","view","oncreate","$","tooltip","Component","UserBadgeList","uncategorized","keys","sort","a","b","BadgesProfilePage","loadUser","route","param","size","component","UserPage","Page","initializers","models","badgeCategories","User","userPrimaryBadge","routes","path","extend","LinkButton","username","UserControls"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","module.exports = flarum.core.compat['Model'];","import setPrototypeOf from \"@babel/runtime/helpers/setPrototypeOf\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['utils/Stream'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/mixin'];","import Modal from \"flarum/components/Modal\";\nimport Button from \"flarum/components/Button\";\nimport fullTime from \"flarum/helpers/fullTime\";\nimport ItemList from \"flarum/utils/ItemList\";\nimport Link from \"flarum/components/Link\";\nimport GiveBadgeModal from \"./GiveBadgeModal\";\n\nexport default class BadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.loading = false;\n  }\n\n  className() {\n    return \"Modal--small\";\n  }\n\n  title() {\n    return app.translator.trans(\n      \"v17development-flarum-badges.forum.badge_information\"\n    );\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">{this.data().toArray()}</div>\n        {this.attrs.userBadgeData && app.forum.attribute(\"canGiveBadge\") && (\n          <div className=\"Modal-footer\">\n            <Button\n              className={\"Button Button--primary\"}\n              onclick={() => {\n                if (\n                  confirm(\n                    app.translator.trans(\n                      \"v17development-flarum-badges.forum.moderation.remove_badge_confirm\"\n                    )\n                  )\n                ) {\n                  this.loading = true;\n                  this.attrs.userBadgeData.delete().then(() => this.hide());\n                }\n              }}\n              loading={this.loading}\n            >\n              {app.translator.trans(\n                \"v17development-flarum-badges.forum.moderation.remove_badge\"\n              )}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  data() {\n    const items = new ItemList();\n\n    // Badge name\n    items.add(\n      \"name\",\n      <div className={\"BadgeModalListItem\"}>\n        <p>\n          <b>\n            {app.translator.trans(\n              \"v17development-flarum-badges.forum.badge.name\"\n            )}\n            :\n          </b>\n        </p>\n        <p>{this.attrs.badge.name()}</p>\n      </div>\n    );\n\n    // Badge description\n    items.add(\n      \"description\",\n      <div className={\"BadgeModalListItem\"}>\n        <p>\n          <b>\n            {app.translator.trans(\n              \"v17development-flarum-badges.forum.badge.description\"\n            )}\n            :\n          </b>\n        </p>\n        <p>{this.attrs.badge.description()}</p>\n      </div>\n    );\n\n    // Badge earning reason\n    if (\n      this.attrs.userBadgeData &&\n      (this.attrs.userBadgeData.description() ||\n        app.forum.attribute(\"canGiveBadge\"))\n    ) {\n      items.add(\n        \"earning_reason\",\n        <div className={\"BadgeModalListItem\"}>\n          <p>\n            <b>\n              {app.translator.trans(\n                \"v17development-flarum-badges.forum.badge.earning_reason\"\n              )}\n              :\n            </b>\n          </p>\n\n          <p>\n            {this.attrs.userBadgeData.description() ? (\n              this.attrs.userBadgeData.description()\n            ) : (\n              <i>\n                {app.translator.trans(\n                  \"v17development-flarum-badges.forum.badge.no_earning_reason\"\n                )}\n              </i>\n            )}\n          </p>\n          <p>\n            {app.forum.attribute(\"canGiveBadge\") && (\n              <a\n                href={\"#\"}\n                onclick={(e) => {\n                  e.preventDefault();\n                  app.modal.show(GiveBadgeModal, {\n                    badge: this.attrs.userBadgeData,\n                  });\n                }}\n              >\n                {app.translator.trans(\n                  \"v17development-flarum-badges.forum.badge.update_earning_reason\"\n                )}\n              </a>\n            )}\n          </p>\n        </div>\n      );\n    }\n\n    // Badge earned on\n    if (this.attrs.userBadgeData) {\n      items.add(\n        \"earned_date\",\n        <div className={\"BadgeModalListItem\"}>\n          <p>\n            <b>\n              {app.translator.trans(\n                \"v17development-flarum-badges.forum.badge.earned_on\"\n              )}\n              :\n            </b>\n          </p>\n          <p>{fullTime(this.attrs.userBadgeData.assignedAt())}</p>\n        </div>\n      );\n    }\n\n    // Badge category\n    if (this.attrs.userBadgeData) {\n      items.add(\n        \"category\",\n        <div className={\"BadgeModalListItem\"}>\n          <p>\n            <b>\n              {app.translator.trans(\n                \"v17development-flarum-badges.forum.badge.category\"\n              )}\n              :\n            </b>\n          </p>\n          <p>\n            {this.attrs.badge.category() && (\n              this.attrs.badge.category().name()\n            )}\n\n            {/* Uncategorized */}\n            {!this.attrs.badge.category() && (\n              app.translator.trans(\n                \"v17development-flarum-badges.forum.uncategorized\"\n              )\n            )}\n            {/* <Link\n              href={app.route(\"badges.category\", {\n                category: this.attrs.badge.category().id(),\n              })}\n            >\n              {app.translator.trans(\n                \"v17development-flarum-badges.forum.all_badges\"\n              )}\n            </Link> */}\n          </p>\n        </div>\n      );\n    }\n\n    // Badge category\n    if (this.attrs.badge && this.attrs.badge.earnedAmount()) {\n      items.add(\n        \"earned_amount\",\n        <div className={\"BadgeModalListItem\"}>\n          <p>\n            {app.translator.transChoice(\n              \"v17development-flarum-badges.forum.badge.earned_count\",\n              this.attrs.badge.earnedAmount(),\n              {\n                count: this.attrs.badge.earnedAmount(),\n              }\n            )}\n          </p>\n        </div>\n      );\n    }\n\n    return items;\n  }\n}\n","import Modal from \"flarum/components/Modal\";\nimport Button from \"flarum/components/Button\";\nimport ItemList from \"flarum/utils/ItemList\";\nimport Select from \"flarum/components/Select\";\nimport Stream from \"flarum/utils/Stream\";\nimport BadgeModal from \"./BadgeModal\";\n\nexport default class GiveBadgeModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Select image\n    this.selectedBadge = this.attrs.badge ? this.attrs.badge.badge() : null;\n\n    // Current user\n    this.user = this.attrs.badge ? this.attrs.badge.user() : this.attrs.user;\n\n    // User has badge\n    this.userHasBadge = false;\n\n    // Badge model\n    this.badge = this.attrs.badge\n      ? this.attrs.badge\n      : app.store.createRecord(\"userBadges\");\n\n    // Earning reason\n    this.description = Stream(this.badge.description());\n\n    // List of available bagges\n    this.categories = {};\n\n    this.uncategorizedBadges = [];\n\n    this.loading = false;\n\n    // Load all available badges\n    if (!this.attrs.badge) {\n      this.loading = true;\n\n      app.store\n        .find('badges', {\n          include: 'category'\n        })\n        .then(badges => {\n          badges.forEach(badge => {\n            // Categorized\n            if(badge.category()) {\n              const category = badge.category();\n      \n              if (!this.categories[category.id()]) {\n                this.categories[category.id()] = {\n                  category,\n                  badges: [badge],\n                };\n              } else {\n                this.categories[category.id()].badges.push(badge);\n              }\n            }\n            // Uncategorized\n            else{\n              this.uncategorizedBadges.push(badge);\n            }\n          });\n\n          this.loading = false;\n\n          // Redraw\n          m.redraw();\n        });\n    } else {\n      this.availableBadges[this.selectedBadge.id()] = this.selectedBadge.name();\n    }\n  }\n\n  className() {\n    return \"Modal--small BadgeModal\";\n  }\n\n  title() {\n    return app.translator.trans(\n      `v17development-flarum-badges.forum.${\n        this.badge.exists ? \"update\" : \"give\"\n      }_badge`\n    );\n  }\n\n  content() {\n    return (\n      <div>\n        <div className=\"Modal-body\">\n          <div className=\"Form\">{this.fields().toArray()}</div>\n        </div>\n\n        <div className=\"Modal-footer\">\n          <Button\n            className={\"Button Button--primary\"}\n            type={\"submit\"}\n            loading={this.loading}\n            disabled={this.userHasBadge}\n          >\n            {app.translator.trans(\"core.forum.composer_edit.submit_button\")}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    // Badge selector\n    items.add(\n      \"badge\",\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>\n            {app.translator.trans(\n              \"v17development-flarum-badges.forum.badge.badge\"\n            )}\n          </b>\n        </p>\n\n        <div className={\"Select\"}>\n          <select\n            value={this.selectedBadge ? this.selectedBadge.id() : \"empty\"}\n            disabled={!!this.attrs.badge}\n            onchange={(e) => {\n              if (e.target.value === \"empty\") return;\n              this.selectedBadge = app.store.getById(\"badges\", e.target.value);\n\n              // Check if the user already has this badge\n              this.checkUserHasBadge(this.selectedBadge);\n            }}\n            className=\"Select-input FormControl\"\n          >\n            <option value={\"empty\"}>\n              {app.translator.trans(\n                \"v17development-flarum-badges.forum.select_badge\"\n              )}\n            </option>\n\n            {/* When no badge is selected, show all available badges */}\n            {!this.attrs.badge &&\n              Object.values(this.categories).map(({ category, badges}) => (\n                <optgroup label={category.name()}>\n                  {badges.map((badge) => (\n                    <option value={badge.id()}>{badge.name()}</option>\n                  ))}\n                </optgroup>\n              ))}\n            \n            {!this.attrs.badge &&\n              this.uncategorizedBadges.length >= 1 && (\n                <optgroup label={app.translator.trans(\"v17development-flarum-badges.forum.uncategorized\")}>\n                  {this.uncategorizedBadges.map((badge) => (\n                    <option value={badge.id()}>{badge.name()}</option>\n                  ))}\n                </optgroup>\n              )}\n\n            {/* When a badge is already assigned */}\n            {!!this.attrs.badge && (\n              <option value={this.selectedBadge.id()}>\n                {this.selectedBadge.name()}\n              </option>\n            )}\n          </select>\n          <i class=\"icon fas fa-caret-down Select-caret\"></i>\n        </div>\n\n        {this.userHasBadge && (\n          <p className={\"UserHasBadge\"}>\n            {app.translator.trans(\n              \"v17development-flarum-badges.forum.user_has_badge\"\n            )}\n          </p>\n        )}\n      </div>,\n      30\n    );\n\n    // Badge description\n    items.add(\n      \"badge_description\",\n      <div className={\"BadgeModalListItem\"}>\n        <p>\n          <b>\n            {app.translator.trans(\n              \"v17development-flarum-badges.forum.badge.description\"\n            )}\n            :\n          </b>\n        </p>\n        <p>\n          {this.selectedBadge\n            ? this.selectedBadge.description()\n            : app.translator.trans(\n                \"v17development-flarum-badges.forum.select_badge\"\n              )}\n        </p>\n      </div>,\n      30\n    );\n\n    // Badge earning reason\n    items.add(\n      \"description\",\n      <div className=\"BadgeModalListItem\">\n        <p>\n          <b>\n            {app.translator.trans(\n              \"v17development-flarum-badges.forum.badge.earning_reason\"\n            )}\n          </b>\n        </p>\n        <textarea\n          className=\"FormControl\"\n          placeholder={app.translator.trans(\n            \"v17development-flarum-badges.forum.badge.earning_reason\"\n          )}\n          bidi={this.description}\n        />\n      </div>,\n      30\n    );\n\n    return items;\n  }\n\n  checkUserHasBadge(badge) {\n    let foundBadge = false;\n\n    this.user.userBadges().map((userBadge) => {\n      if (userBadge.badge() == badge) {\n        foundBadge = true;\n      }\n    });\n\n    this.userHasBadge = foundBadge;\n\n    m.redraw();\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    this.badge\n      .save({\n        description: this.description(),\n        relationships: this.attrs.badge\n          ? {}\n          : {\n              badge: this.selectedBadge,\n              user: this.user,\n            },\n      })\n      .then(\n        () => {\n          // Re-open badge modal\n          if (this.attrs.badge) {\n            app.modal.show(BadgeModal, {\n              badge: this.attrs.badge.badge(),\n              userBadgeData: this.attrs.badge,\n            });\n          } else {\n            this.hide();\n          }\n\n          m.redraw();\n        },\n        (response) => {\n          this.loading = false;\n          this.handleErrors(response);\n        }\n      );\n  }\n}\n","module.exports = flarum.core.compat['common/Component'];","import Model from \"flarum/Model\";\nimport mixin from \"flarum/utils/mixin\";\nimport BadgeModal from \"../../forum/components/BadgeModal\";\n\nexport default class Badge extends mixin(Model, {\n  name: Model.attribute(\"name\"),\n  icon: Model.attribute(\"icon\"),\n  order: Model.attribute(\"order\"),\n  image: Model.attribute(\"image\"),\n  description: Model.attribute(\"description\"),\n  isVisible: Model.attribute(\"isVisible\"),\n  createdAt: Model.attribute(\"createdAt\"),\n  earnedAmount: Model.attribute(\"earnedAmount\"),\n  category: Model.hasOne(\"category\"),\n}) {\n  apiEndpoint() {\n    return \"/badges\" + (this.exists ? \"/\" + this.data.id : \"\");\n  }\n}\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","module.exports = flarum.core.compat['helpers/fullTime'];","import Model from \"flarum/Model\";\nimport mixin from \"flarum/utils/mixin\";\n\nexport default class BadgeCategory extends mixin(Model, {\n  name: Model.attribute(\"name\"),\n  order: Model.attribute(\"order\"),\n  description: Model.attribute(\"description\"),\n  isEnabled: Model.attribute(\"isEnabled\"),\n  createdAt: Model.attribute(\"createdAt\"),\n  users: Model.hasMany(\"users\"),\n  badges: Model.hasMany(\"badges\"),\n}) {\n  apiEndpoint() {\n    return \"/badge_categories\" + (this.exists ? \"/\" + this.data.id : \"\");\n  }\n}\n","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/Link'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['utils/UserControls'];","module.exports = flarum.core.compat['components/LinkButton'];","import Model from \"flarum/Model\";\nimport mixin from \"flarum/utils/mixin\";\n\nexport default class UserBadge extends mixin(Model, {\n  user: Model.hasOne(\"user\"),\n  badge: Model.hasOne(\"badge\"),\n  description: Model.attribute(\"description\"),\n  isPrimary: Model.attribute(\"isPrimary\"),\n  assignedAt: Model.attribute(\"assignedAt\"),\n}) {\n  apiEndpoint() {\n    return \"/user_badges\" + (this.exists ? \"/\" + this.data.id : \"\");\n  }\n}\n","import Component from \"flarum/common/Component\";\nimport BadgeModal from \"./BadgeModal\";\n\nexport default class UserBadge extends Component {\n  view() {\n    // Hide badge when not enabled\n    if (!this.attrs.badge.isVisible()) {\n      return null;\n    }\n\n    return (\n      <span\n        className=\"UserBadge\"\n        title={`${\n          this.attrs.badge.description() ? this.attrs.badge.description() : \"\"\n        }`}\n        onclick={() =>\n          app.modal.show(BadgeModal, {\n            badge: this.attrs.badge,\n            userBadgeData: this.attrs.userBadgeData,\n          })\n        }\n      >\n        <i className={this.attrs.badge.icon()} /> {this.attrs.badge.name()}\n      </span>\n    );\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.$().tooltip();\n  }\n}\n","import Component from \"flarum/common/Component\";\nimport UserBadge from \"./UserBadge\";\n\nexport default class UserBadgeList extends Component {\n  view() {\n    const categories = {};\n    const uncategorized = [];\n\n    this.attrs.user.userBadges().map((userBadge) => {\n      if (!userBadge) return null;\n\n      // Categorized\n      if(userBadge.badge().category()) {\n        const category = userBadge.badge().category();\n\n        if (!categories[category.id()]) {\n          categories[category.id()] = {\n            category,\n            badges: [userBadge],\n          };\n        } else {\n          categories[category.id()].badges.push(userBadge);\n        }\n      }\n      // Uncategorized\n      else{\n        uncategorized.push(userBadge);\n      }\n    });\n\n    return (\n      <div className=\"UserBadges\">\n        {Object.keys(categories).length === 0 && (\n          <div className={\"Placeholder\"}>\n            <p>\n              {app.translator.trans(\n                \"v17development-flarum-badges.forum.user_no_badges\"\n              )}\n            </p>\n          </div>\n        )}\n\n        {Object.keys(categories).length >= 1 &&\n          Object.keys(categories)\n            .sort(\n              (a, b) =>\n                categories[a].category.order() - categories[b].category.order()\n            )\n            .map((id) => {\n              const category = categories[id].category;\n              const badges = categories[id].badges;\n\n              if (!category.isEnabled()) return null;\n\n              return (\n                <div className={\"UserBadgesCategory\"}>\n                  <h3>{category.name()}</h3>\n\n                  {category.description() && <p>{category.description()}</p>}\n\n                  {badges\n                    .sort((a, b) => a.badge().order() - b.badge().order())\n                    .map((userBadge) => (\n                      <UserBadge\n                        badge={userBadge.badge()}\n                        userBadgeData={userBadge}\n                      />\n                    ))}\n                </div>\n              );\n            })}\n\n        {/* Uncategorized badges */}\n        {uncategorized.length >= 1 && (\n          <div className={\"UserBadgesCategory\"}>\n            <h3>\n              {app.translator.trans(\n                \"v17development-flarum-badges.forum.uncategorized\"\n              )}\n            </h3>\n\n            {uncategorized\n              .sort((a, b) => a.badge().order() - b.badge().order())\n              .map((userBadge) => (\n                <UserBadge\n                  badge={userBadge.badge()}\n                  userBadgeData={userBadge}\n                />\n              ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import UserPage from \"flarum/components/UserPage\";\nimport LoadingIndicator from \"flarum/components/LoadingIndicator\";\nimport UserBadgeList from \"./UserBadgeList\";\n\nexport default class BadgesProfilePage extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.user = null;\n\n    this.loading = true;\n\n    this.loadUser(m.route.param(\"username\"));\n  }\n\n  content() {\n    if (!this.user || this.loading) {\n      return (\n        <LoadingIndicator size={46} />\n      );\n    }\n\n    return UserBadgeList.component({\n      user: this.user,\n    });\n  }\n\n  show(user) {\n    super.show(user);\n    this.user = user;\n\n    app.store.find('users', user.id(), {\n      include: 'userBadges,userBadges.badge,userBadges.badge.category'\n    }).then(() => {\n      this.loading = false;\n      m.redraw();\n    });\n  }\n}\n","import Page from \"flarum/components/Page\";\n\nexport default class BadgesOverviewPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n  }\n\n  view() {\n    return <p>Badge page</p>;\n  }\n}\n","import Page from \"flarum/components/Page\";\n\nexport default class BadgeItemPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n  }\n\n  view() {\n    return <p>Badge page</p>;\n  }\n}\n","import { extend } from \"flarum/extend\";\nimport Model from \"flarum/Model\";\nimport User from \"flarum/models/User\";\nimport UserPage from \"flarum/components/UserPage\";\nimport UserControls from \"flarum/utils/UserControls\";\nimport LinkButton from \"flarum/components/LinkButton\";\nimport Button from \"flarum/components/Button\";\nimport Badge from \"../common/models/Badge\";\nimport BadgeCategory from \"../common/models/BadgeCategory\";\nimport UserBadge from \"../common/models/UserBadge\";\nimport BadgesProfilePage from \"./components/BadgesProfilePage\";\nimport BadgesOverviewPage from \"./components/BadgesOverviewPage\";\nimport BadgeItemPage from \"./components/BadgeItemPage\";\nimport GiveBadgeModal from \"./components/GiveBadgeModal\";\n\napp.initializers.add(\"v17development-flarum-badges\", (app) => {\n  app.store.models.badges = Badge;\n  app.store.models.badgeCategories = BadgeCategory;\n  app.store.models.userBadges = UserBadge;\n\n  User.prototype.userBadges = Model.hasMany(\"userBadges\");\n  User.prototype.userPrimaryBadge = Model.hasOne(\"userPrimaryBadge\");\n\n  // Add user badges to the user profile\n  app.routes[\"user.badges\"] = {\n    path: \"/u/:username/badges\",\n    component: BadgesProfilePage,\n  };\n\n  // Future\n  // // Badges overview page\n  // app.routes[\"badges\"] = {\n  //   path: \"/badges\",\n  //   component: BadgesOverviewPage,\n  // };\n\n  // // Badges overview page\n  // app.routes[\"badges.category\"] = {\n  //   path: \"/badges/category/:id\",\n  //   component: BadgesOverviewPage,\n  // };\n\n  // // Badge item page\n  // app.routes[\"badges.item\"] = {\n  //   path: \"/badges/:id\",\n  //   component: BadgeItemPage,\n  // };\n\n  // Add uploads to user page menu items\n  extend(UserPage.prototype, \"navItems\", function (items) {\n    items.add(\n      \"badges\",\n      LinkButton.component(\n        {\n          href: app.route(\"user.badges\", {\n            username: this.user.username(),\n          }),\n          name: \"badges\",\n          icon: \"fas fa-user-tag\",\n        },\n        [\n          app.translator.trans(\n            \"v17development-flarum-badges.forum.badge.badges\"\n          ),\n          <span className=\"Button-badge\">{this.user.userBadges().length}</span>,\n        ]\n      ),\n      90\n    );\n  });\n\n  extend(UserControls, \"moderationControls\", function (items, user) {\n    // User can give badges\n    if (app.forum.attribute(\"canGiveBadge\")) {\n      items.add(\n        \"test\",\n        <Button\n          icon=\"fas fa-user-tag\"\n          onclick={() =>\n            app.modal.show(GiveBadgeModal, {\n              user: user,\n            })\n          }\n        >\n          {app.translator.trans(\n            \"v17development-flarum-badges.forum.give_badge\"\n          )}\n        </Button>\n      );\n    }\n  });\n});\n"],"sourceRoot":""}